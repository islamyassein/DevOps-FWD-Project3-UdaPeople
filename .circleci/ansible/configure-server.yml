---

- name: "configuration play."
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml

    # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    # set environment vrairables using CircleCi values
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
    
    # Or set environment vrairables using direct values
    # - TYPEORM_CONNECTION: postgres
    # - TYPEORM_ENTITIES: ./src/modules/domain/**/*.entity{.ts,.js}
    # - TYPEORM_HOST: udapeople-prod.cjckrotun9g5.us-east-1.rds.amazonaws.com
    # - TYPEORM_PORT: 5432
    # - TYPEORM_USERNAME: postgres
    # - TYPEORM_PASSWORD: udapeopledbpassw0rd
    # - TYPEORM_DATABASE: postgres
    # - TYPEORM_MIGRATIONS: ./src/migrations/*.ts
    # - TYPEORM_MIGRATIONS_DIR: ./src/migrations


  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

    - setup:

  roles:
    - configure-server
    - configure-prometheus-node-exporter